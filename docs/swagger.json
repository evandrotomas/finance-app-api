{
  "swagger": "2.0",
  "info": {
    "title": "Finance App Api",
    "description": "API Finance App that allows users to manage their finaces",
    "version": "1.0.0"
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter 'Bearer' followed by your token. Example: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'"
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/api/users": {
      "post": {
        "sunmary": "Create a new user",
        "tags": ["User"],
        "parameters": [
          {
            "name": "body",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateUserParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User Created successfully",
            "schema": {
              "$ref": "#/definitions/UserWithToken"
            }
          },
          "400": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/InvalidParamsResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "tags": ["User"],
        "sunmary": "Get authenticated user",
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Use not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "sunmary": "Delete authenticated user",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "patch": {
        "sunmary": "Update authenticated user",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "User update successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/InvalidParamsResponse"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "sunmary": "Login user",
        "tags": ["User"],
        "parameters": [
          {
            "name": "body",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LoginUserParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User logged in successfully",
            "schema": {
              "$ref": "#/definitions/UserWithToken"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/UnauthorizedErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/api/users/refreshToken": {
      "post": {
        "sunmary": "Refresh user token",
        "tags": ["User"],
        "parameters": [
          {
            "name": "body",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RefreshTokenParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Tokens generated successfully",
            "schema": {
              "$ref": "#/definitions/Tokens"
            }
          },
          "401": {
            "description": "Invalid token",
            "schema": {
              "$ref": "#/definitions/UnauthorizedErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/api/users/me/balance": {
      "get": {
        "sunmary": "Get authenticated user balance",
        "tags": ["User"],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "description": "Start date for transactions query (format: YYYY-MM-DD)",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2025-01-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "description": "End date for transactions query (format: YYYY-MM-DD)",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2025-01-31"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User balance found",
            "schema": {
              "$ref": "#/definitions/UserBalance"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },

    "/api/transactions": {
      "get": {
        "sunmary": "Get authenticated user transaction",
        "tags": ["Transaction"],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "description": "Start date for transactions query (format: YYYY-MM-DD)",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2025-01-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "description": "End date for transactions query (format: YYYY-MM-DD)",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2025-01-31"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transaction"
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "sunmary": "Create a new transaction for the authenticated user",
        "tags": ["Transaction"],
        "parameters": [
          {
            "name": "body",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateTransactionParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Transaction created successfully",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "400": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/InvalidParamsResponse"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/transactions/{transactionId}": {
      "patch": {
        "sunmary": "Update transaction by user ID",
        "tags": ["Transaction"],
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string",
            "description": "ID of the transactions to update"
          },
          {
            "name": "body",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateTransactionParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction updated succesfully",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "404": {
            "description": "Transaction not found",
            "schema": {
              "$ref": "#/definitions/TransactionNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "sunmary": "Delete transaction by ID",
        "tags": ["Transaction"],
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string",
            "description": "ID of the transactions to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction deleted successfully",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "404": {
            "description": "transaction not found",
            "schema": {
              "$ref": "#/definitions/TransactionNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "e29ef739-ffae-45a8-a582-fb56f9668a12"
        },
        "first_name": {
          "type": "string",
          "example": "Antônio"
        },
        "last_name": {
          "type": "string",
          "example": "Belchior"
        },
        "email": {
          "type": "string",
          "example": "belchior@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "password"
        }
      }
    },
    "UserWithToken": {
      "allOf": [
        {
          "$ref": "#/definitions/User"
        },
        {
          "type": "object",
          "properties": {
            "tokens": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "refreshToken": {
                  "type": "string",
                  "example": "dGhpc2lzYXJlZnJlc2h0b2tlbg=="
                }
              }
            }
          }
        }
      ]
    },
    "Tokens": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxZTliYTdmMS0yNDczLTRlYWYtYWYxZi01YThjOWI5MDBiMTMiLCJpYXQiOjE3NTYyMzA2OTIsImV4cCI6MTc1NjIzMTU5Mn0"
        },
        "refreshToken": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxZTliYTdmMS0yNDczLTRlYWYtYWYxZi01YThjOWI5MDBiMTMiLCJpYXQiOjE3NTYyMzA2OTIsImV4cCI6MTc1ODgyMjY5Mn0.Alx1Q4DMvRJduEMeZly964Y2kl2W7CPoLndMDXRotg0"
        }
      }
    },
    "UserBalance": {
      "type": "object",
      "properties": {
        "earnings": {
          "type": "string",
          "example": "1000"
        },
        "expenses": {
          "type": "string",
          "example": "500"
        },
        "investments": {
          "type": "string",
          "example": "1000"
        },
        "earningsPercentage": {
          "type": "string",
          "example": "50"
        },
        "expensesPercentage": {
          "type": "string",
          "example": "25"
        },
        "investmentsPercentage": {
          "type": "string",
          "example": "25"
        },
        "balance": {
          "type": "string",
          "example": "500"
        }
      }
    },
    "CreateUserParams": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "example": "Antônio",
          "required": true
        },
        "last_name": {
          "type": "string",
          "example": "Belchior",
          "required": true
        },
        "email": {
          "type": "string",
          "example": "belchior@gmail.com",
          "required": true
        },
        "password": {
          "type": "string",
          "example": "password",
          "required": true
        }
      }
    },
    "LoginUserParams": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "belchior@gmail.com",
          "required": true
        },
        "password": {
          "type": "string",
          "example": "123456",
          "required": true
        }
      }
    },
    "RefreshTokenParams": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string",
          "required": true,
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxZTliYTdmMS0yNDczLTRlYWYtYWYxZi01YThjOWI5MDBiMTMiLCJpYXQiOjE3NTYyMzA2OTIsImV4cCI6MTc1ODgyMjY5Mn0.Alx1Q4DMvRJduEMeZly964Y2kl2W7CPoLndMDXRotg0"
        }
      }
    },
    "UserNotFoundResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "User not found"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "74caf120-cc49-497d-92f6-1059d14ee60a"
        },
        "user_id": {
          "type": "string",
          "example": "74caf120-cc49-497d-92f6-1059d14ee60b"
        },
        "name": {
          "type": "string",
          "example": "Salary"
        },
        "type": {
          "type": "string",
          "example": "EARNING",
          "description": "EARNING, EXPENSE, INVESTMENT"
        },
        "amount": {
          "type": "string",
          "example": "1000"
        }
      }
    },
    "CreateTransactionParams": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Salary",
          "required": true
        },
        "type": {
          "type": "string",
          "example": "EARNING",
          "description": "EARNING, EXPENSE, INVESTMENT",
          "required": true
        },
        "date": {
          "type": "string",
          "example": "2025-07-22T12:15:00Z",
          "required": true
        },

        "amount": {
          "type": "number",
          "example": "1000",
          "required": true
        }
      }
    },
    "UpdateTransactionParams": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Salary"
        },
        "type": {
          "type": "string",
          "example": "EARNING",
          "description": "EARNING, EXPENSE, INVESTMENT"
        },
        "date": {
          "type": "string",
          "example": "2025-07-22T12:15:00Z"
        },

        "amount": {
          "type": "number",
          "example": "1000"
        }
      }
    },
    "TransactionNotFoundResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Transaction not found"
        }
      }
    },
    "InvalidParamsResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Invalid params"
        }
      }
    },
    "InternalServerErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Internal server error"
        }
      }
    },
    "UnauthorizedErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Unauthorized"
        }
      }
    }
  }
}
